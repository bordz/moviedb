eyJhbGciOiJIUzI1NiJ9.c2VydmljZXM6CiAgZGF0YWJhc2U6CiAgICBpbWFnZTogcG9zdGdyZXM6OS41LjEKICByZWRpczoKICAgIGltYWdlOiByZWRpczozLjAuNwogIGVsYXN0aWNzZWFyY2g6CiAgICBpbWFnZTogZWxhc3RpY3NlYXJjaDoyLjIuMAoKY2FjaGU6CiAgbW91bnQ6CiAgICAtIHZlbmRvci9idW5kbGUKICAgIC0gLmdpdAoKIyBlbnZpcm9ubWVudDoKIyAgIFJBQ0tfRU5WOiB0ZXN0CiMgICBSQUlMU19FTlY6IHRlc3QKIyAgIFNFQ1JFVF9LRVlfQkFTRTogYmxhaGJsYWhibGFoCgpwaXBlbGluZToKICBidWlsZDoKICAgIGltYWdlOiBjb2RlbXkvcnVieToyLjMuMQogICAgY29tbWFuZHM6CiAgICAgICMgLSBnZW0gdXBkYXRlIGJ1bmRsZXIKICAgICAgIyAtIGJ1bmRsZSBpbnN0YWxsIC0tcGF0aCB2ZW5kb3IvYnVuZGxlCiAgICAgICMgLSBidW5kbGUgZXhlYyByYWtlIGRiOmNyZWF0ZSBkYjpzY2hlbWE6bG9hZAogICAgICAjIC0gYnVuZGxlIGV4ZWMgcmFrZSB0ZXN0CiAgICAgIC0gZWNobyAiaGVsbG8gd29ybGQiCgogIHB1Ymxpc2hfbGF0ZXN0OgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICBjb21tYW5kczoKICAgICAgLSBnZW0gdXBkYXRlIGJ1bmRsZXIKICAgICAgLSBidW5kbGUgaW5zdGFsbCAtLXBhdGggdmVuZG9yL2J1bmRsZQogICAgdXNlcm5hbWU6IHhjb29yZGluYXRlCiAgICBwYXNzd29yZDogJHtET0NLRVJfSFVCX1BBU1NXT1JEfQogICAgZW1haWw6IHguY29vcmRpbmF0ZUBnbWFpbC5jb20KICAgIHJlcG86IHhjb29yZGluYXRlL21vdmllZGIKICAgIHRhZzogbGF0ZXN0CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgoKICBwdWJsaXNoX3RhZzoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgdXNlcm5hbWU6IHhjb29yZGluYXRlCiAgICBwYXNzd29yZDogJHtET0NLRVJfSFVCX1BBU1NXT1JEfQogICAgZW1haWw6IHguY29vcmRpbmF0ZUBnbWFpbC5jb20KICAgIHJlcG86IHhjb29yZGluYXRlL21vdmllZGIKICAgIHRhZzogJHtUQUd9CiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgogIGRlcGxveS10by1zdGctd2ViOgogICAgaW1hZ2U6IHBlbG90b24vZHJvbmUtcmFuY2hlcgogICAgdXJsOiAiaHR0cDovLzEzOS4xNjIuMTE4LjE4Mzo4MDgwL3YxL3Byb2plY3RzLzFhNSIKICAgIGFjY2Vzc19rZXk6IEZGRTI0MjREMEI1QTJGRTgyREI2CiAgICBzZWNyZXRfa2V5OiBoOVc1R0R2WFd5aEp2bWJzQndYZVFqRlJ5ZFB1NDc5YUJiZ01KWmhUCiAgICBzZXJ2aWNlOiBtb3ZpZWRiL3dlYgogICAgZG9ja2VyX2ltYWdlOiB4Y29vcmRpbmF0ZS9tb3ZpZWRiOmxhdGVzdAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKCiAgZGVwbG95LXRvLXN0Zy13b3JrZXI6CiAgICBpbWFnZTogcGVsb3Rvbi9kcm9uZS1yYW5jaGVyCiAgICB1cmw6ICJodHRwOi8vMTM5LjE2Mi4xMTguMTgzOjgwODAvdjEvcHJvamVjdHMvMWE1IgogICAgYWNjZXNzX2tleTogRkZFMjQyNEQwQjVBMkZFODJEQjYKICAgIHNlY3JldF9rZXk6IGg5VzVHRHZYV3loSnZtYnNCd1hlUWpGUnlkUHU0NzlhQmJnTUpaaFQKICAgIHNlcnZpY2U6IG1vdmllZGIvd29ya2VyCiAgICBkb2NrZXJfaW1hZ2U6IHhjb29yZGluYXRlL21vdmllZGI6bGF0ZXN0CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgoKICBkZXBsb3ktdG8tcHJvZC13ZWI6CiAgICBpbWFnZTogcGVsb3Rvbi9kcm9uZS1yYW5jaGVyCiAgICB1cmw6ICJodHRwOi8vMTM5LjE2Mi4xMTguMTgzOjgwODAvdjEvcHJvamVjdHMvMWEzNSIKICAgIGFjY2Vzc19rZXk6IDY3RjgyRkY3NUFDOTNENEI1NjAwCiAgICBzZWNyZXRfa2V5OiBna0VVZjVHNnQ1ZkhrZ0V6eGRwNFNCZ2FTWmY4VlVpUG1HSEd2QTY2CiAgICBzZXJ2aWNlOiBtb3ZpZWRiL3dlYgogICAgZG9ja2VyX2ltYWdlOiAieGNvb3JkaW5hdGUvbW92aWVkYjoke1RBR30iCiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgogIGRlcGxveS10by1wcm9kLXdvcmtlcjoKICAgIGltYWdlOiBwZWxvdG9uL2Ryb25lLXJhbmNoZXIKICAgIHVybDogImh0dHA6Ly8xMzkuMTYyLjExOC4xODM6ODA4MC92MS9wcm9qZWN0cy8xYTM1IgogICAgYWNjZXNzX2tleTogNjdGODJGRjc1QUM5M0Q0QjU2MDAKICAgIHNlY3JldF9rZXk6IGdrRVVmNUc2dDVmSGtnRXp4ZHA0U0JnYVNaZjhWVWlQbUdIR3ZBNjYKICAgIHNlcnZpY2U6IG1vdmllZGIvd29ya2VyCiAgICBkb2NrZXJfaW1hZ2U6ICJ4Y29vcmRpbmF0ZS9tb3ZpZWRiOiR7VEFHfSIKICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCiMgcHVibGlzaDoKIyAgIGRvY2tlcjoKIyAgICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiMgICAgIHN0b3JhZ2VfZHJpdmVyOiBvdmVybGF5CiMgICAgIHVzZXJuYW1lOiB4Y29vcmRpbmF0ZQojICAgICBwYXNzd29yZDogJHtET0NLRVJfSFVCX1BBU1NXT1JEfQojICAgICBlbWFpbDogeC5jb29yZGluYXRlQGdtYWlsLmNvbQojICAgICByZXBvOiBib3Jkei9tb3ZpZWRiCiMgICAgIHRhZzogbGF0ZXN0CiMgICAgIHdoZW46CiMgICAgICAgYnJhbmNoOiBtYXN0ZXIKIwojICAgZG9ja2VyOgojICAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKIyAgICAgc3RvcmFnZV9kcml2ZXI6IG92ZXJsYXkKIyAgICAgdXNlcm5hbWU6IHhjb29yZGluYXRlCiMgICAgIHBhc3N3b3JkOiAke0RPQ0tFUl9IVUJfUEFTU1dPUkR9CiMgICAgIGVtYWlsOiB4LmNvb3JkaW5hdGVAZ21haWwuY29tCiMgICAgIHJlcG86IGJvcmR6L21vdmllZGIKIyAgICAgdGFnOiAkJFRBRwojICAgICB3aGVuOgojICAgICAgIGV2ZW50OiB0YWcKIwojIGRlcGxveToKIyAgIHJhbmNoZXI6CiMgICAgIHVybDogaHR0cDovLzEzOS4xNjIuNDMuMTgxOjgwODAvdjEvcHJvamVjdHMvMWE1CiMgICAgIGFjY2Vzc19rZXk6IDMzMTM5NEQ1Q0NDRUE3RTJCRTUzCiMgICAgIHNlY3JldF9rZXk6IDZFU24xRmhTc0s3cHRUVExuU3lTOUxUMTFSQ3lRS0FnRWFXcjhwREwKIyAgICAgc2VydmljZTogbW92aWVkYi93ZWIKIyAgICAgZG9ja2VyX2ltYWdlOiBjb2RlbXkvbW92aWVkYjpsYXRlc3QKIyAgICAgd2hlbjoKIyAgICAgICBicmFuY2g6IG1hc3RlcgojCiMgICByYW5jaGVyOgojICAgICB1cmw6IGh0dHA6Ly8xMzkuMTYyLjQzLjE4MTo4MDgwL3YxL3Byb2plY3RzLzFhNQojICAgICBhY2Nlc3Nfa2V5OiAzMzEzOTRENUNDQ0VBN0UyQkU1MwojICAgICBzZWNyZXRfa2V5OiA2RVNuMUZoU3NLN3B0VFRMblN5UzlMVDExUkN5UUtBZ0VhV3I4cERMCiMgICAgIHNlcnZpY2U6IG1vdmllZGIvd29ya2VyCiMgICAgIGRvY2tlcl9pbWFnZTogY29kZW15L21vdmllZGI6bGF0ZXN0CiMgICAgIHdoZW46CiMgICAgICAgYnJhbmNoOiBtYXN0ZXIKIwojICAgcmFuY2hlcjoKIyAgICAgdXJsOiBodHRwOi8vMTM5LjE2Mi40My4xODE6ODA4MC92MS9wcm9qZWN0cy8xYTI3CiMgICAgIGFjY2Vzc19rZXk6IDExREEyM0Y0MDc1OUExQTMwNUY1CiMgICAgIHNlY3JldF9rZXk6IHh2aWRURk01YUtkRlZGa0JCZ1F2YmlZcU1jUzk5TlIxZVVUWkFKRzEKIyAgICAgc2VydmljZTogbW92aWVkYi93ZWIKIyAgICAgZG9ja2VyX2ltYWdlOiBjb2RlbXkvbW92aWVkYjokJFRBRwojICAgICB3aGVuOgojICAgICAgIGV2ZW50OiB0YWcKIwojICAgcmFuY2hlcjoKIyAgICAgdXJsOiBodHRwOi8vMTM5LjE2Mi40My4xODE6ODA4MC92MS9wcm9qZWN0cy8xYTI3CiMgICAgIGFjY2Vzc19rZXk6IDExREEyM0Y0MDc1OUExQTMwNUY1CiMgICAgIHNlY3JldF9rZXk6IHh2aWRURk01YUtkRlZGa0JCZ1F2YmlZcU1jUzk5TlIxZVVUWkFKRzEKIyAgICAgc2VydmljZTogbW92aWVkYi93b3JrZXIKIyAgICAgZG9ja2VyX2ltYWdlOiBjb2RlbXkvbW92aWVkYjokJFRBRwojICAgICB3aGVuOgojICAgICAgIGV2ZW50OiB0YWcK.nmB4DKz1nZm2Aw6sFCA7TYQLjRFs3ULByZzfD_Rk82c